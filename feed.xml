<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Grafana Blog</title>
  <subtitle>Blog posts on Grafana, Metrics, Graphite, Monitoring, Build measure learn</subtitle>
  <id>http://grafana.org/blog</id>
  <link href="http://grafana.org/blog"/>
  <link href="http://grafana.org/feed.xml" rel="self"/>
  <updated>2016-06-23T02:00:00+02:00</updated>
  <author>
    <name>Grafana</name>
  </author>
  <entry>
    <title>Grafana 3.1 Beta Released</title>
    <link rel="alternate" href="http://grafana.org/blog/2016/06/23/grafana-3-1-beta-released.html"/>
    <id>http://grafana.org/blog/2016/06/23/grafana-3-1-beta-released.html</id>
    <published>2016-06-23T02:00:00+02:00</published>
    <updated>2016-06-23T16:10:03+02:00</updated>
    <author>
      <name>Torkel Ödegaard</name>
    </author>
    <content type="html">&lt;p&gt;Grafana 3.1 beta is now available for download! In this release we have focused on
making monitoring more collaborative by enabling Grafana users to easily
share and discover dashboard definitions. There is now a dashboards section in
&lt;a href="https://grafana.net"&gt;Grafana.net&lt;/a&gt; where you can discover and share dashboards
for popular infrastructure and server applications.&lt;/p&gt;

&lt;h2 id="release-highlights"&gt;Release Highlights&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Dashboard Repository&lt;/strong&gt; at &lt;a href="https://grafana.net"&gt;Grafana.net&lt;/a&gt;. You can now discover and upload dashboards.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dashboard&lt;/strong&gt; time range and variables values are now always synced with URL.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Constant Template Variable&lt;/strong&gt; have been added to make dashboard sharing easier (use as metric prefix).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Singlestat&lt;/strong&gt; can now map ranges to text.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Metrics&lt;/strong&gt; Grafana now supports sending metrics about itself.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grafana/grafana/blob/master/CHANGELOG.md"&gt;Full changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="dashboard-export-amp-import"&gt;Dashboard Export &amp;amp; Import&lt;/h3&gt;

&lt;p&gt;The export feature is now accessed from the share menu.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/img/v31/export_menu.png" /&gt;&lt;/p&gt;

&lt;p&gt;Dashboards exported from Grafana 3.1 are now more portable and easier for others to import than before.
The export process extracts information from the dashboard, like what data source types are used by panels.
This information is added to the exported dashboard defintion. So when you or another person tries to
import the dashboard they will be asked to select data sources and any optional metric prefix.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/img/v31/import_step1.png" /&gt;&lt;/p&gt;

&lt;p&gt;The above screenshot shows the new import modal that gives you 3 options for how to import a dashboard.
One notable new addition here is the ability to import a Dashboards directly from &lt;a href="https://grafana.net"&gt;Grafana.net&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The next step in the import process:&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/img/v31/import_step2.png" /&gt;&lt;/p&gt;

&lt;p&gt;Here you can change the name of the dashboard and also pick what data sources you want the dashboard to use. The above screenshot
shows a CollectD dashboard for Graphite that requires a metric prefix be specified.&lt;/p&gt;

&lt;h3 id="discover-dashboards"&gt;Discover Dashboards&lt;/h3&gt;

&lt;p&gt;On &lt;a href="https://grafana.net"&gt;Grafana.net&lt;/a&gt; you can now browse &amp;amp; search for dashboards. We have already added a few but
more are being uploaded every day. To import a dashboard just copy the dashboard url and head back to Grafana.
Open Dashboard Search -&amp;gt; Import -&amp;gt; Paste Grafana.net Dashboard URL.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/img/v31/gnet_dashboards_list.png" /&gt;&lt;/p&gt;

&lt;h3 id="share-dashboards"&gt;Share Dashboards&lt;/h3&gt;

&lt;p&gt;If you have an awesome MongoDB, Nginx or Cassandra Dashboard why not share it with the rest of the world?&lt;/p&gt;

&lt;p&gt;Start by creating a &lt;a href="https://grafana.net"&gt;Grafana.net&lt;/a&gt; account and login. Then head over to your profile page.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/img/blog/v3.1/gnet_profile_dashboards.png" /&gt;&lt;/p&gt;

&lt;p&gt;From there click on My Dashboards tab and then &lt;code class="prettyprint"&gt;Upload Dashboard&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;Pick the dashboard json file that you exported from Grafana. At this point we only accept dashboards exported from Grafana v3.1+ as only
those dashboards contain information about what data source types the panels use.&lt;/p&gt;

&lt;p&gt;After hitting &lt;code class="prettyprint"&gt;Upload Dashboard&lt;/code&gt; button you will be taken to the dashboard page where you can modify dashboard name, description,
add screenshots and most importantly you can write a detailed README (in Markdown) explaining the config you use for the metric collectors
(CollectD or similar).&lt;/p&gt;

&lt;p&gt;When you are happy with everything you can publish the Dashboard which will make it publicly accessible.&lt;/p&gt;

&lt;h3 id="dashboard-urls"&gt;Dashboard Urls&lt;/h3&gt;

&lt;p&gt;In Grafana 3.1 the current time range and template variables values are always synced to the URL. This makes it possible to always copy your current
Grafana url to share with a colleague without having to use the Share modal.&lt;/p&gt;

&lt;h3 id="internal-metrics"&gt;Internal metrics&lt;/h3&gt;

&lt;p&gt;Do you want metrics about viewing metrics? Of course you do! In this release we added support for sending metrics about Grafana to graphite.
You can configure interval and server in the config file.&lt;/p&gt;

&lt;h3 id="breaking-changes"&gt;Breaking changes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Logging&lt;/strong&gt; format have been changed to improve log filtering.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Graphite PNG&lt;/strong&gt; Graphite PNG support dropped from Graph panel (use Grafana native PNG instead).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Migration&lt;/strong&gt; No longer possible to migrate dashboards from 1.x (Stored in ES or Influx 0.8).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="alerting-update"&gt;Alerting update&lt;/h3&gt;

&lt;p&gt;We have been hard at work on alerting for a long time now and are making substantial progress. This
is a much anticipated and important feature and we want to get it right. It is not ready to be
released in v3.1. But we hope to merge it to master soon after 3.1 stable is released.&lt;/p&gt;

&lt;p&gt;Here is an update showing you how you can set alert thresholds by visually dragging level handles.
&lt;img src="/assets/img/blog/v3.1/alerting_short.gif" /&gt;&lt;/p&gt;

&lt;h3 id="thanks"&gt;Thanks&lt;/h3&gt;

&lt;p&gt;A big thanks to all the Grafana users who contribute by submitting PRs, bug reports &amp;amp; feedback!&lt;/p&gt;

&lt;div class=""&gt;
&lt;a class="button secondary radius" href="/download"&gt;Download Grafana 3.1&lt;/a&gt;.
&lt;a class="button primary radius" href="http://play.grafana.org" target="_blank"&gt;Live Demo&lt;/a&gt;.
&lt;/div&gt;

&lt;h4 id="subscribe-to-project-updates"&gt;Subscribe to project updates&lt;/h4&gt;

&lt;section class="newsletter"&gt;
  &lt;form action="http://grafana.us8.list-manage.com/subscribe/post?u=2aeb5711db2aececc990be536&amp;amp;id=5585d37ecc" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank"&gt;
    &lt;row class="collapse"&gt;
      &lt;div class="medium-10 columns"&gt;
        &lt;input type="email" value="" name="EMAIL" class="email" id="mce-EMAIL" placeholder="email address"&gt;
      &lt;/div&gt;
      &lt;div class="medium-2 columns"&gt;
        &lt;input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button postfix"&gt;
      &lt;/div&gt;
    &lt;/row&gt;
  &lt;/form&gt;
&lt;/section&gt;
</content>
  </entry>
  <entry>
    <title>Grafana 3.0 Stable Released</title>
    <link rel="alternate" href="http://grafana.org/blog/2016/05/11/grafana-3-0-stable-released.html"/>
    <id>http://grafana.org/blog/2016/05/11/grafana-3-0-stable-released.html</id>
    <published>2016-05-11T02:00:00+02:00</published>
    <updated>2016-06-23T09:08:49+02:00</updated>
    <author>
      <name>Torkel Ödegaard</name>
    </author>
    <content type="html">&lt;p&gt;Grafana 3.0 Stable is now available for download! Over the past month we&amp;rsquo;ve been polishing features,
fixing bugs and making sure everything is working the way it&amp;rsquo;s supposed to. We&amp;rsquo;ve been overwhelmed
by the excitement and response around this release. See the features below to get a more in-depth
look at what 3.0 has to offer, and check out what else we&amp;rsquo;ve been up to.&lt;/p&gt;

&lt;div class="text-center"&gt;
&lt;a class="button secondary radius" href="/download"&gt;Download Grafana 3.0&lt;/a&gt;.
&lt;a class="button primary radius" href="http://play.grafana.org" target="_blank"&gt;Live Demo&lt;/a&gt;.
&lt;/div&gt;

&lt;h2 id="release-highlights"&gt;Release Highlights&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Big UI&lt;/strong&gt; improvements and polish&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Redesigned&lt;/strong&gt; plugin architecture and SDK&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Grafana-cli&lt;/strong&gt; command line tool shipped with grafana, installs plugins&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Persisted&lt;/strong&gt; dashboard playlists&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Preferences&lt;/strong&gt; like home dashboard, timezone and theme on org and user level&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New&lt;/strong&gt; plugin types, Apps, and Panels.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New&lt;/strong&gt; platform site built around Grafana at &lt;a href="https://grafana.net"&gt;Grafana.net&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Plugin repository&lt;/li&gt;
&lt;li&gt;Dashboard repository (coming soon)&lt;/li&gt;
&lt;li&gt;Hosted Grafana and Hosted metrics (coming soon)&lt;/li&gt;
&lt;li&gt;Monitoring and backups of on-prem Grafana (coming soon)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Annotation&lt;/strong&gt; popovers can contain clickable links&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Templated data source&lt;/strong&gt; Easily reuse the same dashboard for multiple data source instances&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OSX Homebrew support&lt;/strong&gt; &lt;a href="http://docs.grafana.org/installation/mac/"&gt;Homebrew installation instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Support&lt;/strong&gt; for InfluxDB 0.11+ (and new functions)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grafana/grafana/blob/master/CHANGELOG.md"&gt;Full changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="whats-new-in-3-0-screencast"&gt;Whats new in 3.0 Screencast&lt;/h2&gt;

&lt;p&gt;I have recorded a 19 minute long screencast that demos all the major new features in the release. But If you
prefer to read then check out the &lt;a href="http://docs.grafana.org/guides/whats-new-in-v3/"&gt;What&amp;rsquo;s new in Grafana 3.0&lt;/a&gt; article.&lt;/p&gt;

&lt;iframe style="width: 100%;" height="415" src="https://www.youtube.com/embed/1kJyQKgk_oY" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2 id="commercial-support"&gt;Commercial Support&lt;/h2&gt;

&lt;p&gt;We are here to help you succeed with your Grafana projects. &lt;a href="https://grafana.net/support/plans"&gt;Commercial support subscriptions&lt;/a&gt; for Grafana are now available. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get escalated access to core members of the Grafana development team; we’ll work with you to help you solve any Grafana issue quickly.&lt;/li&gt;
&lt;li&gt;Three tiers of production-level support, with increasing levels of response times and communication channels; pick the one that’s best for you.&lt;/li&gt;
&lt;li&gt;Unlimited incidents are available on every tier.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We are committed to a 100% open-source strategy for Grafana. If your organization finds Grafana valuable, please consider purchasing a subscription. Get direct support, bug fixes, and training from the core Grafana team.&lt;/p&gt;

&lt;h2 id="grafana-net"&gt;Grafana.net&lt;/h2&gt;

&lt;p&gt;&lt;img src="/assets/img/blog/v3.0/grafana_net_tour.png"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://grafana.net"&gt;Grafana.net&lt;/a&gt; offers a central repository where the community can come together to discover, create and
share plugins (data sources, panels, apps) and dashboards.&lt;/p&gt;

&lt;p&gt;We are also working on a hosted Graphite-compatible data source that will be optimized for use with Grafana.
It’ll be easy to combine your existing data source(s) with this OpenSaaS option. Finally, Grafana.net can
also be a hub to manage all your Grafana instances. You’ll be able to monitor their health and availability,
perform dashboard backups, and more.&lt;/p&gt;

&lt;h2 id="plugin-showcase"&gt;Plugin showcase&lt;/h2&gt;

&lt;p&gt;Discovering and installing plugins is very quick and easy with Grafana 3.0 and &lt;a href="https://grafana.net"&gt;Grafana.net&lt;/a&gt;. Here
are a couple that I encourage you try!&lt;/p&gt;

&lt;h4 id="clock-panel"&gt;&lt;a href="https://grafana.net/plugins/grafana-clock-panel"&gt;Clock Panel&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Support&amp;rsquo;s both current time and count down mode.
&lt;img src="/assets/img/blog/v3.0/clock_panel.png"&gt;&lt;/p&gt;

&lt;h4 id="worldmap-panel"&gt;&lt;a href="https://grafana.net/plugins/grafana-worldmap-panel"&gt;Worldmap Panel&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Worldmap panel that can work with both regular time series (if you have country code in series name) and GeoHash codes
that you can use with Elasticsearch&amp;rsquo;s GeoHash aggregation.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/img/blog/v3.0/worldmap-world.png"&gt;&lt;/p&gt;

&lt;h4 id="pie-chart-panel"&gt;&lt;a href="https://grafana.net/plugins/grafana-piechart-panel"&gt;Pie Chart Panel&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;A simple pie chart panel is now available as an external plugin.
&lt;img src="/assets/img/blog/v3.0/pie_chart_panel.png"&gt;&lt;/p&gt;

&lt;h4 id="worldping-app"&gt;&lt;a href="https://grafana.net/plugins/raintank-worldping-app"&gt;WorldPing App&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;This is full blown Grafana App that adds new panels, data sources and pages to give
feature rich global performance monitoring directly from your on-prem Grafana.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/img/blog/v3.0/wP-Screenshot-dash-web.png"&gt;&lt;/p&gt;

&lt;h4 id="zabbix-app"&gt;&lt;a href="https://grafana.net/plugins/alexanderzobnin-zabbix-app"&gt;Zabbix App&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;This app contains the already very pouplar Zabbix data source plugin, 2 dashboards and a triggers panel. It is
created and maintained by &lt;a href="https://github.com/alexanderzobnin/grafana-zabbix"&gt;Alexander Zobnin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/img/blog/v3.0/zabbix_app.png"&gt;&lt;/p&gt;

&lt;p&gt;Checkout the full list of plugins on &lt;a href="https://grafana.net/plugins"&gt;Grafana.net&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="upcoming-webinars"&gt;Upcoming webinars&lt;/h2&gt;

&lt;h4 class="null"&gt;&lt;span style="font-size:14px"&gt;&lt;span class="mc-toc-title"&gt;Wednesday, May 18 - 1:00pm EDT&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;h4&gt;&lt;a href="https://attendee.gotowebinar.com/register/3674548443167506178"&gt;Deconstructing the New Plugin Architecture in Grafana.&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Matt Toback will take a deep dive into the new plugin architecture in Grafana 3.0 and how to use Grafana.net to extend your panels, data sources and even introduce new applications.
&lt;h5&gt;&lt;a href="https://attendee.gotowebinar.com/register/3674548443167506178"&gt;Register Now&lt;/a&gt;&lt;/h5&gt;&lt;/p&gt;

&lt;h4 class="null"&gt;&lt;span style="font-size:14px"&gt;&lt;span class="mc-toc-title"&gt;Wednesday, May 25 - 1:00pm EDT&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;

&lt;h4&gt;&lt;a href="https://attendee.gotowebinar.com/register/1168326036993997827"&gt;Deconstructing the New Plugin Architecture in Grafana.&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Matt Toback will take a deep dive into the new plugin architecture in Grafana 3.0 and how to use Grafana.net to extend your panels, data sources and even introduce new applications.
&lt;h5&gt;&lt;a href="https://attendee.gotowebinar.com/register/1168326036993997827"&gt;Register Now&lt;/a&gt;&lt;/h5&gt;&lt;/p&gt;

&lt;h2 id="thanks"&gt;Thanks&lt;/h2&gt;

&lt;p&gt;A big thank you to everyone who helped test and report issues with the beta release.&lt;/p&gt;

&lt;div class=""&gt;
&lt;a class="button secondary radius" href="/download"&gt;Download Grafana 3.0&lt;/a&gt;.
&lt;a class="button primary radius" href="http://play.grafana.org" target="_blank"&gt;Live Demo&lt;/a&gt;.
&lt;/div&gt;

&lt;h4 id="subscribe-to-project-updates"&gt;Subscribe to project updates&lt;/h4&gt;

&lt;section class="newsletter"&gt;
  &lt;form action="http://grafana.us8.list-manage.com/subscribe/post?u=2aeb5711db2aececc990be536&amp;amp;id=5585d37ecc" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank"&gt;
    &lt;row class="collapse"&gt;
      &lt;div class="medium-10 columns"&gt;
        &lt;input type="email" value="" name="EMAIL" class="email" id="mce-EMAIL" placeholder="email address"&gt;
      &lt;/div&gt;
      &lt;div class="medium-2 columns"&gt;
        &lt;input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button postfix"&gt;
      &lt;/div&gt;
    &lt;/row&gt;
  &lt;/form&gt;
&lt;/section&gt;
</content>
  </entry>
  <entry>
    <title>Timing is Everything. Editor Mode in Grafana 3.0 for the Clock Panel Plugin</title>
    <link rel="alternate" href="http://grafana.org/blog/2016/04/15/clock-plugin-p2.html"/>
    <id>http://grafana.org/blog/2016/04/15/clock-plugin-p2.html</id>
    <published>2016-04-15T02:00:00+02:00</published>
    <updated>2016-06-23T09:08:49+02:00</updated>
    <author>
      <name>Daniel Lee</name>
    </author>
    <content type="html">&lt;p&gt;In &lt;a href="http://grafana.org/blog/2016/04/08/clock-plugin-p1.html"&gt;part 1&lt;/a&gt;, I wrote a simple Clock Plugin. However, it&amp;rsquo;s too simple to be usable for most people. In this post, I will show how to make this plugin customizable and at the same time explain more about how plugins can hook into Grafana. To make the clock panel more usable, we should be able to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;choose a 12 or 24 hour clock&lt;/li&gt;
&lt;li&gt;set the background color&lt;/li&gt;
&lt;li&gt;set the font size&lt;/li&gt;
&lt;li&gt;set date/time formats &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then after that we&amp;rsquo;ll add some more features. Support for time zones and a countdown would be useful additions.&lt;/p&gt;

&lt;h2 id="defaults"&gt;Defaults&lt;/h2&gt;

&lt;p&gt;We define fields to be saved in Grafana by creating values on the panel object of the controller. You can see these values for any panel by choosing View JSON from the settings menu in Grafana. Here&amp;rsquo;s an excerpt from the clock panel json (with some fields removed), the panel data is saved in the panels array:&lt;/p&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Clock"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"rows"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nt"&gt;"panels"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nt"&gt;"bgColor"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"rgb(132, 151, 130)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nt"&gt;"clockType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"24 hour"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In our code we can define panel data by first creating a JavaScript with the default values for the fields and then setting them on the panel object:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;panelDefaults&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;clockType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'24 hour'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'60px'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;fontWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'normal'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;bgColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$injector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kr"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$injector&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaults&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;panelDefaults&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;updateClock&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The Lodash function defaults, which is called in the code above: &lt;code class="prettyprint"&gt;_.defaults&lt;/code&gt;, sets a default value only if the value is not already set.&lt;/p&gt;

&lt;p&gt;We can now use these fields in our controller or module.html template:&lt;/p&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"font-size: {{ctrl.panel.fontSize}};"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ctrl.time}}&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But if we want our users to be able to change these panel values then we need to expose them in the Grafana editor.&lt;/p&gt;

&lt;h2 id="editor-mode"&gt;Editor Mode&lt;/h2&gt;

&lt;p&gt;When you click Edit on a panel, you open Editor mode. This is where we want to add in our options so that a user can customize the clock panel. Every panel has a general tab where you change the title and width etc. We will create a new editor tab beside the general tab with the clock specific options. We won&amp;rsquo;t have to write much code for this new tab as the Grafana conventions mean all we need to is to hook up an Angular template with input fields and Grafana will take care of the rest. Grafana will automatically save the values to the dashboard json and load them without us writing any extra code.&lt;/p&gt;

&lt;h2 id="using-events"&gt;Using Events&lt;/h2&gt;

&lt;p&gt;To add our editor tab we will hook into the event model so that we can add the tab when the &lt;em&gt;init-edit-mode&lt;/em&gt; event is triggered. The following code should be added to the constructor of the ClockCtrl class:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;events&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'init-edit-mode'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onInitEditMode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then we need to create a function called onInitEditMode. The tab is added by calling the controller function, addEditorTab. This function has two parameters; the tab name and the path to a html template for our new editor tab. It can be a bit tricky to figure out the path, the path name will be based on the id that is specified in the plugin.json file. In this case our plugin id is &lt;strong&gt;grafana-clock-panel&lt;/strong&gt;. We need to create a new Angular template which we will call editor.html.&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;onInitEditMode&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEditorTab&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Options'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'public/plugins/grafana-clock-panel/editor.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="editor-html-and-css"&gt;Editor HTML and CSS&lt;/h2&gt;

&lt;p&gt;In our editor.html we will now use Grafana css styles rather than our own. We don&amp;rsquo;t really want to do anything custom here. It should look the same as other tabs in Grafana.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m using the &lt;a href="https://github.com/grafana/grafana/blob/master/public/sass/components/_gf-form.scss"&gt;gf-form css class&lt;/a&gt; from Grafana. I have one row with a couple of columns (following the new style in Grafana 3.0). Each column is wrapped in a div like this:&lt;/p&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"section gf-form-group"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then each pair, label and field is wrapped in a div with a gf-form class.&lt;/p&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"gf-form"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"gf-form-label width-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Font Size&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"gf-form-input width-4"&lt;/span&gt; &lt;span class="na"&gt;ng-model=&lt;/span&gt;&lt;span class="s"&gt;"ctrl.panel.fontSize"&lt;/span&gt; &lt;span class="na"&gt;ng-change=&lt;/span&gt;&lt;span class="s"&gt;"ctrl.render()"&lt;/span&gt; &lt;span class="na"&gt;ng-model-onblur&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that we there are some Angular attributes here. &lt;em&gt;ng-model&lt;/em&gt; will update the panel data. &lt;em&gt;ng-change&lt;/em&gt; will render the panel when you change the value. This change will occur on the onblur event due to the &lt;em&gt;ng-model-onblur&lt;/em&gt; attribute. This means you can see the effect of your changes on the panel while editing.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/img/blog/clock-panel-editor.png" /&gt;&lt;/p&gt;

&lt;p&gt;On the editor tab we use a drop down for 12/24 hour clock, an input field for font size and a color picker for the background color.&lt;/p&gt;

&lt;p&gt;The drop down/select has its own &lt;em&gt;gf-form-select-wrapper&lt;/em&gt; css class and looks like this:&lt;/p&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"gf-form"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"gf-form-label width-9"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;12 or 24 hour&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"gf-form-select-wrapper max-width-9"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;select&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"input-small gf-form-input"&lt;/span&gt; &lt;span class="na"&gt;ng-model=&lt;/span&gt;&lt;span class="s"&gt;"ctrl.panel.clockType"&lt;/span&gt; &lt;span class="na"&gt;ng-options=&lt;/span&gt;&lt;span class="s"&gt;"t for t in ['12 hour', '24 hour', 'custom']"&lt;/span&gt; &lt;span class="na"&gt;ng-change=&lt;/span&gt;&lt;span class="s"&gt;"ctrl.render()"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The color picker (or spectrum picker) is a component that already exists in Grafana. We use it like this for the background color:&lt;/p&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;spectrum-picker&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"gf-form-input"&lt;/span&gt; &lt;span class="na"&gt;ng-model=&lt;/span&gt;&lt;span class="s"&gt;"ctrl.panel.bgColor"&lt;/span&gt; &lt;span class="na"&gt;ng-change=&lt;/span&gt;&lt;span class="s"&gt;"ctrl.render()"&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&amp;lt;/spectrum-picker&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="editor-tab-finished"&gt;Editor Tab Finished&lt;/h2&gt;

&lt;p&gt;And that&amp;rsquo;s it! It really is quite simple to create your own editor tab. To reiterate, this all ties together quite neatly. We specify properties and panel defaults in the constructor for ClockCtrl and these can then be changed in the editor. We don&amp;rsquo;t have to do anything special to save the changes. Grafana takes care of that.&lt;/p&gt;

&lt;p&gt;One thing to be aware of  is that panel defaults are used the first time a panel is created to set the initial values of the panel properties. After the panel is saved then the saved value will be used instead. So beware if you update panel defaults they will not automatically update the property in existing panel. For example, if I set the default font size to 60px first and then in version 2 of the plugin change it to 50px, existing panels will still have 60px and only new panels will get the new 50px value.&lt;/p&gt;

&lt;h2 id="clean-up-after-timeout"&gt;Clean up after $timeout&lt;/h2&gt;

&lt;p&gt;Now that we know about the event system, we can clean up a potential memory leak. We are using the Angular function $timeout which is a wrapper for setTimeout but that uses promises unlike the core setTimeout function. If we don&amp;rsquo;t cancel it then it can potentially cause problems. We can listen to the &lt;em&gt;panel-teardown&lt;/em&gt; event and call cancel to make sure the timeout promise gets destroyed.&lt;/p&gt;

&lt;p&gt;We listen to the event in the constructor:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;events&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'panel-teardown'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onPanelTeardown&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then call cancel on teardown:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;onPanelTeardown&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$timeout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cancel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nextTickPromise&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="customization-complete"&gt;Customization Complete!&lt;/h2&gt;

&lt;p&gt;We now have a fully functional panel that shows the time and updates every second. You can customize it and change colors and font sizes, as well as choosing between a 12 and 24 hour clock.&lt;/p&gt;

&lt;p&gt;But am I satisfied? No! More features!&lt;/p&gt;

&lt;h2 id="more-features-countdown"&gt;More features - Countdown&lt;/h2&gt;

&lt;p&gt;It&amp;rsquo;s always fun with a countdown to lunch or to launch of a new product. The countdown is very similar to our normal clock. It uses the current time as well and compares it to the end time. The difference between them is the countdown value.&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;timeLeft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;countdownSettings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;endCountdownTime&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It would also be nice to define the text that shows up when the countdown finishes. This is pretty easy. We need to add it in three places. First add a new default field in the ClockCtrl and then add the field to the editor html and lastly use the value in the module.html template.&lt;/p&gt;

&lt;p&gt;There is some text formatting code too if you&amp;rsquo;re interested then check out the &lt;a href="https://github.com/grafana/clock-panel/blob/47ba362d8bd3696c93c4ac65ca28b0a9eb26906e/src/clock_ctrl.js#L94-L128"&gt;renderCountdown function in the ClockCtrl class on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now we have a working countdown!&lt;/p&gt;

&lt;h2 id="more-features-simple-timezones"&gt;More features - Simple Timezones&lt;/h2&gt;

&lt;p&gt;Next up timezones. I work in a distributed company and it would be great to know what the time is in New York, Seattle, Perth and Hawaii. Or to know what GMT time is right now (if your servers run on GMT/UTC).&lt;/p&gt;

&lt;p&gt;This will be a simple implementation allowing the user to choose an offset from UTC or to just show local time. Remember that inputs have to be parsed to integer values as they are saved as strings.&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetFromUtc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;utcOffset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetFromUtc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we have a customizable digital Clock Panel with the ability to show times from different time zones.&lt;/p&gt;

&lt;h2 id="finished"&gt;Finished!&lt;/h2&gt;

&lt;p&gt;I think this is as far as I want to take Clock panel for the moment but I am of course open to Pull Requests and feature requests. You can find the &lt;a href="https://github.com/grafana/clock-panel"&gt;code on GitHub&lt;/a&gt; and the Clock can be installed in Grafana with the Grafana CLI tool:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;grafana-cli plugins install grafana-clock-panel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hopefully this is useful to new plugin authors and please don&amp;rsquo;t hesitate to ask questions if you get stuck.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Timing is Everything. Writing the Clock Panel Plugin for Grafana 3.0</title>
    <link rel="alternate" href="http://grafana.org/blog/2016/04/08/clock-plugin-p1.html"/>
    <id>http://grafana.org/blog/2016/04/08/clock-plugin-p1.html</id>
    <published>2016-04-08T02:00:00+02:00</published>
    <updated>2016-06-23T09:08:49+02:00</updated>
    <author>
      <name>Daniel Lee</name>
    </author>
    <content type="html">&lt;p&gt;People have been &lt;a href="https://github.com/grafana/grafana/issues/1693"&gt;asking for a Clock Panel in Grafana&lt;/a&gt; so I thought I&amp;rsquo;d give it a try and at the same time show how to build plugins for Grafana.&lt;/p&gt;

&lt;p&gt;Grafana 3.0 introduces a new plugin system architecture and these plugins can be shared with everyone through &lt;a href="https://www.grafana.net"&gt;Grafana.net&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id="tl-dr"&gt;TL;DR&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;If you just want a clock panel for Grafana then the &lt;a href="https://grafana.net/plugins/grafana-clock-panel"&gt;finished Clock Panel plugin is here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Check out the current version of the &lt;a href="https://github.com/grafana/clock-panel"&gt;code on GitHub here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="/assets/img/blog/clock_panel_screenshot.png" /&gt;&lt;/p&gt;

&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;

&lt;p&gt;There are four different plugin types for Grafana:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Datasources&lt;/li&gt;
&lt;li&gt;Apps&lt;/li&gt;
&lt;li&gt;Panels&lt;/li&gt;
&lt;li&gt;Dashboards&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All datasources and panels are plugins and Grafana comes with a lot of built-in plugins as well as some external ones. Check out the &lt;a href="http://docs.grafana.org/plugins/"&gt;Grafana documentation for more about them&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m going to focus on the panel plugin. A panel in Grafana is how data is displayed on a dashboard. The main panel in Grafana is the graph panel. They can have a datasource like Graphite providing them with data but they don&amp;rsquo;t have to have one. The clock panel is going to use the current time as its only input. We don&amp;rsquo;t need a datasource for that as we can use JavaScript to fetch the date and time.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;re going to start simple. Version one of our clock plugin will not be configurable. It just shows the current time.&lt;/p&gt;

&lt;h2 id="setup-grafana"&gt;Setup Grafana&lt;/h2&gt;

&lt;p&gt;You can develop Grafana plugins using the official optimized Grafana release packages or running a locally built Grafana development server. It does not really matter unless your plugin needs to reference Grafana style variables or you want better exception call stacks when troubleshooting plugin issues. &lt;a href="http://docs.grafana.org/project/building_from_source/"&gt;Follow the instructions here&lt;/a&gt; to learn how to build Grafana. General instructions for plugin development &lt;a href="https://github.com/grafana/grafana/blob/master/docs/sources/plugins/development.md"&gt;can be found here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="getting-started"&gt;Getting started&lt;/h2&gt;

&lt;p&gt;This may sound strange but the easiest way to develop a new plugin is to create it directly in Grafana&amp;rsquo;s plugin directory. If you are running Grafana from a local development build then the default plugins directory is &lt;code class="prettyprint"&gt;&amp;lt;grafana_repo_dir&amp;gt;/data/plugins&lt;/code&gt;. If you have grafana installed from a &lt;strong&gt;.deb&lt;/strong&gt; or &lt;strong&gt;.rpm&lt;/strong&gt; package then the default plugins directory is &lt;code class="prettyprint"&gt;/var/lib/grafana/plugins&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After you have created your plugin directory and your plugin.json (more on what that is below) you need to restart grafana-server and the new plugin will be automatically found and registered. When making changes to javascript files you do not need to restart grafana-server, that is only required when you make changes to the plugin definition file (plugin.json).&lt;/p&gt;

&lt;p&gt;You can can clone one of the example plugins to get started or make one from scratch. If you are used to JavaScript development and have your own set of tools then it&amp;rsquo;s worth doing it yourself, otherwise I&amp;rsquo;d recommend cloning one of the plugins that is similar to one you want to make.&lt;/p&gt;

&lt;h3 id="technology-choices"&gt;Technology Choices&lt;/h3&gt;

&lt;p&gt;Grafana is built with Angular and the plugins interact with Angular too so that choice is already made. I will be writing it in the latest ES6 syntax so I need Babel to transpile that to ES5 JavaScript. I choose Grunt for the build script.&lt;/p&gt;

&lt;h3 id="5-simple-steps"&gt;5 Simple Steps&lt;/h3&gt;

&lt;p&gt;The steps to create a simple plugin are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Set up the boilerplate files (most of these are the same for any JavaScript project)&lt;/li&gt;
&lt;li&gt;Get a simple buildscript running&lt;/li&gt;
&lt;li&gt;Write some plugin JavaScript&lt;/li&gt;
&lt;li&gt;Style the plugin&lt;/li&gt;
&lt;li&gt;Publish the plugin&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="1-plugin-boilerplate"&gt;1. Plugin Boilerplate&lt;/h2&gt;

&lt;p&gt;For Grafana plugins there are two mandatory files: plugin.json and module.js.&lt;/p&gt;

&lt;p&gt;Plugin json is the same concept as the package.json file for an npm package. Grafana looks for plugin.json files when scanning the plugins directory.&lt;/p&gt;

&lt;p&gt;The important fields are the first three, especially the id. The convention for the id is &lt;strong&gt;[github username/org]-[plugin name]-[plugin type]&lt;/strong&gt; and it has to be unique.&lt;/p&gt;

&lt;p&gt;Minimal plugin.json:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;"type"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"panel"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"Clock"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"grafana-clock-panel"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

  &lt;span class="s2"&gt;"info"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"description"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"Clock panel for grafana"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"author"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"Raintank Inc."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"url"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"http://raintank.io"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s2"&gt;"keywords"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"clock"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"panel"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="s2"&gt;"version"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"updated"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"2015-03-24"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="s2"&gt;"dependencies"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"grafanaVersion"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"3.x.x"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"plugins"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The module.js file is the starting point for your plugin and the interface to Grafana. The Grafana SDK is quite small so far and can be found here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://github.com/grafana/grafana/blob/master/public/app/plugins/sdk.ts"&gt;SDK file in Grafana&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/grafana/grafana/blob/master/public/app/plugins/plugin_api.md"&gt;SDK Readme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The SDK contains three different plugin classes for us to use: PanelCtrl, MetricsPanelCtrl and QueryCtrl. In our case, the module.js file should export one of these. Our clock plugin does not have any metric queries so we only need to inherit from PanelCtrl.&lt;/p&gt;

&lt;h2 id="2-get-a-simple-buildscript-running"&gt;2. Get a simple buildscript running&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;m preparing for a grunt build at a later stage so the module.js file is placed in the src subfolder and later on we will have a dist folder. Grafana has a convention that it loads the code from the dist folder if it exists and will then ignore our src folder.&lt;/p&gt;

&lt;h3 id="setting-up-grunt-with-babel"&gt;Setting up grunt with babel&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Create a git repo with git init and create a .gitignore file.&lt;/li&gt;
&lt;li&gt;Add a license, I&amp;rsquo;m using MIT.&lt;/li&gt;
&lt;li&gt;Create a README.md file.&lt;/li&gt;
&lt;li&gt;Create a package.json using npm init so we can install npm packages.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;npm install with the following dev dependencies or something similar:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="s2"&gt;"devDependencies"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;"grunt"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"~0.4.5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"babel"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"~6.5.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"grunt-babel"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"~6.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"grunt-contrib-copy"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"~0.8.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"grunt-contrib-watch"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"^0.6.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"grunt-contrib-uglify"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"~0.11.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"grunt-systemjs-builder"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"^0.2.5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"load-grunt-tasks"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"~3.2.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"grunt-execute"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"~0.2.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"grunt-contrib-clean"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"~0.6.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"babel-plugin-transform-es2015-modules-systemjs"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"^6.5.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"babel-preset-es2015"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"^6.5.0"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I am using Lodash and Moment JS. Both of these are already included in Grafana so an npm install is all that is needed so I can build locally. If I want to use an external library that is not included in Grafana then I need to add it to the source code. This is how I installed them:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm install moment --save
npm install lodash --save
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lodash is a useful utility library. Moment js is excellent for formatting dates and times. Exactly what we need!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Setup grunt. I am using the following Gruntfile.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;grunt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'load-grunt-tasks'&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="nx"&gt;grunt&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;grunt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loadNpmTasks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'grunt-execute'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;grunt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loadNpmTasks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'grunt-contrib-clean'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;grunt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initConfig&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;

    &lt;span class="na"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"dist"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

    &lt;span class="na"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;src_to_dist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;cwd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'src'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;expand&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'**/*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'!**/*.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'!**/*.scss'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="na"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'dist'&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;pluginDef&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;expand&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'plugin.json'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'README.md'&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="na"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'dist'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;

    &lt;span class="na"&gt;watch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;rebuild_all&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'src/**/*'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'plugin.json'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="na"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;

    &lt;span class="na"&gt;babel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;sourceMap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;presets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"es2015"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'transform-es2015-modules-systemjs'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"transform-es2015-for-of"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;dist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
          &lt;span class="na"&gt;cwd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'src'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;expand&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'*.js'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="na"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'dist'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;ext&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;'.js'&lt;/span&gt;
        &lt;span class="p"&gt;}]&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;grunt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;registerTask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'clean'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'copy:src_to_dist'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'copy:pluginDef'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'babel'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you don&amp;rsquo;t know Grunt then you can learn all about it &lt;a href="http://gruntjs.com"&gt;here on their site&lt;/a&gt;. Feel free to write your own Gulp (or whatever&amp;rsquo;s trendy) build script.&lt;/p&gt;

&lt;h2 id="3-write-some-plugin-javascript"&gt;3. Write some plugin JavaScript&lt;/h2&gt;

&lt;p&gt;Create a clock_ctrl.js file that will hold most of our plugin&amp;rsquo;s code. This ctrl file is imported into module.js and exported as PanelCtrl. The module.js is very simple and looks like this:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ClockCtrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="s1"&gt;'./clock_ctrl'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kr"&gt;export&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;ClockCtrl&lt;/span&gt; &lt;span class="nx"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;PanelCtrl&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Write a little bit of code in the Clock controller to show the current time (we&amp;rsquo;ll add date later). I am using Moment.js to be able to format dates properly. $timeout is the Angular version of setTimeout. It updates the view every second.&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;PanelCtrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="s1"&gt;'app/plugins/sdk'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;moment&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="s1"&gt;'moment'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kr"&gt;export&lt;/span&gt; &lt;span class="kr"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ClockCtrl&lt;/span&gt; &lt;span class="kr"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;PanelCtrl&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$injector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kr"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$injector&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;updateClock&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;updateClock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'hh:mm:ss'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$timeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;updateClock&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;ClockCtrl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;templateUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'module.html'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I am using a template file named module.html and it is a standard Angular template. It is really simple at this stage:&lt;/p&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;{{ctrl.time}}&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And that&amp;rsquo;s &lt;a href="https://github.com/grafana/clock-panel/commit/6a9d0d625e3757582ce30f0b5c7e784a2b0e978b"&gt;the first commit&lt;/a&gt;! A working, albeit very basic panel plugin for Grafana.&lt;/p&gt;

&lt;p&gt;Run grunt to get everything compiled and copied over to the dist folder. Then refresh Grafana and try to add a new panel. The new Clock Panel should be available in the list.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/img/blog/clock_panel_add.png" /&gt;&lt;/p&gt;

&lt;p&gt;But we&amp;rsquo;re not finished yet. It looks very plain and off center at the moment. We need to style it.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/img/blog/clock_panel_unstyled.png" /&gt;&lt;/p&gt;

&lt;h2 id="4-style-the-plugin"&gt;4. Style the plugin&lt;/h2&gt;

&lt;p&gt;There are two ways to to style a plugin:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use Grafana&amp;rsquo;s css.&lt;/li&gt;
&lt;li&gt;Import your own css.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We will import our own css. How you do this depends on your level of ambition. If you are not changing any colors then we just do a normal import. However if you want to add your own colors then it would be best to create two versions, one for the dark theme and one for the light theme. &lt;a href="https://github.com/raintank/worldping-app/tree/master/src/sass"&gt;Check out the worldPing app&lt;/a&gt; for an example of using Sass to create the two themes.&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="s1"&gt;'./css/clock-panel.css!'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can get the panel height from the ctrl object and use that to set the height for the clock panel outer div in the template by setting:&lt;/p&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;style="height: {{ctrl.height}}px;"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now the first version of the clock panel plugin is finished and preparations made to take it further. &lt;a href="https://github.com/grafana/clock-panel"&gt;Check out the code on GitHub&lt;/a&gt; if you want to contribute or make your own plugin.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/img/blog/clock_panel_styled.png" /&gt;&lt;/p&gt;

&lt;h2 id="5-publish-the-plugin"&gt;5. Publish the plugin&lt;/h2&gt;

&lt;p&gt;If you want to share your plugin with others then you can publish it on Grafana.net. This means it can be installed with the Grafana CLI tool like this:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;grafana-cli plugins install grafana-clock-panel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To publish a plugin, create an account on Grafana.net and then talk to the Grafana developers on Slack who will help you with the last step. &lt;a href="https://grafana.net/getting-started"&gt;Instructions for publishing can be found on Grafana.net.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the &lt;a href="http://grafana.org/blog/2016/04/15/clock-plugin-p2.html"&gt;next post&lt;/a&gt;, we will look at how to make the clock customizable. I want to be able to choose date and time format, 12/24 hour clock, customizable colors, font sizes and more. It should be easy to make it do countdowns too.&lt;/p&gt;

&lt;h3 id="references"&gt;References:&lt;/h3&gt;

&lt;p&gt;I used the following plugins for inspiration:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/grafana/example-app"&gt;Example App&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/grafana/piechart-panel"&gt;Piechart Panel&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/raintank/worldping-app"&gt;worldPing App&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Grafana 3.0 Beta Released</title>
    <link rel="alternate" href="http://grafana.org/blog/2016/03/31/grafana-3-0-beta-released.html"/>
    <id>http://grafana.org/blog/2016/03/31/grafana-3-0-beta-released.html</id>
    <published>2016-03-31T02:00:00+02:00</published>
    <updated>2016-04-05T00:01:40+02:00</updated>
    <author>
      <name>Torkel Ödegaard</name>
    </author>
    <content type="html">&lt;p&gt;Today is the day! We are pleased to announce that Grafana 3.0 beta
is released along with a preview of &lt;a href="http://grafana.net"&gt;Grafana.net&lt;/a&gt;! Since our last release
approximately 3 months ago, we’ve been extremely busy. This is the biggest
update to Grafana ever, with over 1500 commits by over 30 contributors.&lt;/p&gt;

&lt;p&gt;Read on below to learn more about what’s new in 3.0 or:&lt;/p&gt;

&lt;div class="text-center"&gt;
&lt;a class="button secondary radius" href="/download"&gt;Download Grafana 3.0&lt;/a&gt;.
&lt;a class="button primary radius" href="http://play.grafana.org" target="_blank"&gt;Live Demo&lt;/a&gt;.
&lt;/div&gt;

&lt;h2 id="release-highlights"&gt;Release Highlights&lt;/h2&gt;

&lt;h3 id="commercial-support"&gt;Commercial Support&lt;/h3&gt;

&lt;p&gt;Commercial Support subscriptions for Grafana are now &lt;a href="https://grafana.net/support/plans/"&gt;generally available&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Raintank is committed to a 100% open-source strategy for Grafana. We
do not want to go down the “open core” route. If your organization
finds Grafana valuable, please consider purchasing a subscription. Get
direct support, bug fixes, and training from the core Grafana team.&lt;/p&gt;

&lt;h3 id="plugins"&gt;Plugins&lt;/h3&gt;

&lt;p&gt;With the popularity of Grafana continuing to accelerate, it has been
challenging to keep up with all the requests for new features, new
panels, new data sources, and new functionality. Saying “no” so often
has been frustrating, especially for an open source project with such
a vibrant community.&lt;/p&gt;

&lt;p&gt;The team felt that it was time to dramatically improve extensibility
through plugin support. Grafana 3.0 comes with a completely revamped
plugin SDK / API.&lt;/p&gt;

&lt;p&gt;We’ve refactored our &lt;strong&gt;Data Source&lt;/strong&gt; plugin architecture and added
two new plugin types:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Panel&lt;/strong&gt; plugins let you add new panel types for your Dashboards.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;App&lt;/strong&gt; plugins bundle &lt;strong&gt;Panels&lt;/strong&gt; plugins, &lt;strong&gt;Data Sources&lt;/strong&gt; plugins,
Dashboards, and Grafana &lt;strong&gt;Pages&lt;/strong&gt;. Apps are a great way to provide an
entire experience right within Grafana.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="grafana-net"&gt;Grafana.net&lt;/h3&gt;

&lt;p&gt;&lt;img src="/assets/img/blog/v3.0/grafana_net_tour.png"&gt;&lt;/p&gt;

&lt;p&gt;A preview of &lt;a href="http://grafana.net"&gt;Grafana.net&lt;/a&gt; is launching along with this release. We
think it’s the perfect compliment to Grafana.&lt;/p&gt;

&lt;p&gt;Grafana.net currently offers a central repository where the community
can come together to discover and share plugins (Data Sources, Panels,
Apps) and Dashboards for Grafana 3.0 and above.&lt;/p&gt;

&lt;p&gt;We are also working on a hosted Graphite-compatible Data Source that
will be optimized for use with Grafana. It’ll be easy to combine your
existing Data Source(s) with this OpenSaaS option.&lt;/p&gt;

&lt;p&gt;Finally, Grafana.net will also be a hub to manage all your Grafana
instances. You’ll be able to monitor their health and availability,
perform Dashboard backups, and more.&lt;/p&gt;

&lt;p&gt;Grafana.net will officially launch along with the stable version of
Grafana 3.0, but &lt;a href=http://www.grafana.net&gt;check out the preview
and sign up for an account&lt;/a&gt; in the meantime.&lt;/p&gt;

&lt;h3 id="grafana-cli"&gt;grafana-cli&lt;/h3&gt;

&lt;p&gt;Grafana 3.0 comes with a new command line tool called grafana-cli. You
can easily install plugins from Grafana.net with it. For
example:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;grafana-cli install grafana-pie-chart-panel
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="personalization-amp-preferences"&gt;Personalization &amp;amp; Preferences&lt;/h3&gt;

&lt;p&gt;The home dashboard, timezone and theme can now be customized on Organization
and user Profile level. Grafana can also track recently viewed dashboards, which
can then be displayed in the dashboard list panel.&lt;/p&gt;

&lt;h3 id="improved-playlists"&gt;Improved Playlists&lt;/h3&gt;

&lt;p&gt;You can now save Playlists, and start them by using a Playlist URL. If
you update a running Playlist, it will update after its next cycle.&lt;/p&gt;

&lt;p&gt;This is powerful as it allows you to remote control Grafana. If you
have a big TV display showing Grafana in your company lobby, create a
playlist named Lobby, and start it on the computer connected to the
Lobby TV.&lt;/p&gt;

&lt;p&gt;You can now change the Lobby playlist and have the dashboards shown in
the Lobby update accordingly, automatically.&lt;/p&gt;

&lt;p&gt;The playlist does not even have to contain multiple Dashboards; you
can use this feature to reload the whole Dashboard (and Grafana)
periodically and remotely.&lt;/p&gt;

&lt;p&gt;You can also make Playlists dynamic by using Dashboard &lt;strong&gt;tags&lt;/strong&gt; to
define the Playlist.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/img/v3/playlist.png"&gt;&lt;/p&gt;

&lt;h3 id="improved-ui"&gt;Improved UI&lt;/h3&gt;

&lt;p&gt;We’ve always tried to focus on a good looking, usable, and responsive
UI. We’ve continued to pay a lot of attention to these areas in this
release.&lt;/p&gt;

&lt;p&gt;Grafana 3.0 has a dramatically updated UI that not only looks better
but also has a number of usability improvements. The side menu now
works as a dropdown that you can pin to the side. The Organization /
Profile / Sign out side menu links have been combined into an on hover
slide out menu.&lt;/p&gt;

&lt;p&gt;In addition, all the forms and the layouts of all pages have been
updated to look and flow better, and be much more consistent. There
are literally hundreds of UI improvements and refinements.&lt;/p&gt;

&lt;p&gt;Here’s the new side menu in action:&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/img/v3/menu.gif"&gt;&lt;/p&gt;

&lt;p&gt;And here&amp;rsquo;s the new look for Dashboard settings:&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/img/v3/dashboard_settings.png"&gt;&lt;/p&gt;

&lt;p&gt;Check out the &lt;a href="http://play.grafana.org" target="_blank"&gt;Play
Site&lt;/a&gt; to get a feel for some of the UI changes.&lt;/p&gt;

&lt;h3 id="improved-annotations"&gt;Improved Annotations&lt;/h3&gt;

&lt;p&gt;It is now possible to define a link in each annotation. You can hover
over the link and click the annotation text. This feature is very
useful for linking to particular commits or tickets where more
detailed information can be presented to the user.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/img/v3/annotation_links.gif"&gt;&lt;/p&gt;

&lt;h3 id="prometheus-influxdb-and-opentsdb-improvements"&gt;Prometheus, InfluxDB, and OpenTSDB improvements&lt;/h3&gt;

&lt;p&gt;All three of these popular included Data Sources have seen a variety
of improvements in this release. Here are some highlights:&lt;/p&gt;

&lt;h4 id="prometheus"&gt;Prometheus&lt;/h4&gt;

&lt;p&gt;The Prometheus Data Source now supports annotations.&lt;/p&gt;

&lt;h4 id="influxdb"&gt;InfluxDB&lt;/h4&gt;

&lt;p&gt;You can now select the InfluxDB policy from the query editor.
&lt;img src="/assets/img/v3/influxdb_policy.png"&gt;&lt;/p&gt;

&lt;p&gt;Grafana 3.0 also comes with support for InfluxDB 0.11.&lt;/p&gt;

&lt;h4 id="opentsdb"&gt;OpenTSDB&lt;/h4&gt;

&lt;p&gt;OpenTSDB 2.2 is better supported and now supports millisecond precision.&lt;/p&gt;

&lt;h3 id="improved-code-and-reduced-technical-debt"&gt;Improved code, and reduced technical debt&lt;/h3&gt;

&lt;p&gt;The styling system has seen a massive update and clean-up. Grafana 1.x
and 2.x were built on a shaky and old style foundation based on
Bootstrap 2.3, followed by a Bootswatch dark theme, followed by many
custom overrides. This has been completely removed, and we have
switched to a modern and custom SASS based style foundation. In
addition, much of the code has been migrated to ES6 and Typescript.&lt;/p&gt;

&lt;p&gt;These changes dramatically improve the maintainability  of the code
going forward.&lt;/p&gt;

&lt;h4 id="where-s-alerting"&gt;Where’s alerting?&lt;/h4&gt;

&lt;p&gt;We are aware that many of you are waiting for the alerting feature,
and regrettably it didn’t make it into this beta.&lt;/p&gt;

&lt;p&gt;While we understand that many are disappointed, and anxious to get
alerting in Grafana, the team strongly felt that improving
extensibility and addressing technical debt were more important in the
short term, and will give us a stronger base to build alerting on top
of. We have spent a lot of effort making sure that the code base
remains modern and of high quality.&lt;/p&gt;

&lt;p&gt;We did not take this decision lightly, and hope that our users
understand the logic behind our choice. Once Grafana 3.0 stable is
released, we will be circling back on Alerting.&lt;/p&gt;

&lt;h3 id="breaking-changes"&gt;Breaking changes&lt;/h3&gt;

&lt;p&gt;Dashboards from v2.6 are compatible; no manual updates should be necessary. There could
be some edge case scenarios where dashboards using templating could stop working.
If that is the case just enter the edit view for the template variable and hit Update button.
This is due to a simplification of the variable format system where template variables are
now stored without any formatting (glob/regex/etc), this is done on the fly when the
variable is interpolated.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Plugin API: The plugin API has changed so if you are using a custom
data source (or panel) they need to be updated as well.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;InfluxDB 0.8: This data source is no longer included in releases,
you can still install manually from &lt;a href="http://grafana.net"&gt;Grafana.net&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;KairosDB: This data source has also no longer shipped with Grafana,
you can install it manually from &lt;a href="http://grafana.net"&gt;Grafana.net&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="changelog"&gt;CHANGELOG&lt;/h3&gt;

&lt;p&gt;For a detailed list and link to github issues for everything included
in the 3.0 release please view the
&lt;a href="https://github.com/grafana/grafana/blob/master/CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt;
file.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Grafana- It's Rocket Science</title>
    <link rel="alternate" href="http://grafana.org/blog/2016/01/19/Grafana-Its-Rocket-Science.html"/>
    <id>http://grafana.org/blog/2016/01/19/Grafana-Its-Rocket-Science.html</id>
    <published>2016-01-19T01:00:00+01:00</published>
    <updated>2016-03-02T12:09:54+01:00</updated>
    <author>
      <name>Raj Dutt</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img src="/assets/img/v2/rocket_science_twitter.png"&gt;&lt;/p&gt;

&lt;p&gt;At &lt;a href="http://raintank.io" target="_blank"&gt;raintank&lt;/a&gt;, all our software is open source. We haven’t talked much about how the whole stack will fit together (more on that soon…), but starting with &lt;a href="http://www.grafana.org" target="_blank"&gt;Grafana&lt;/a&gt;, every &lt;a href="https://github.com/raintank/litmus-plugin" target="_blank"&gt;piece&lt;/a&gt; &lt;a href="https://github.com/raintank/raintank-metric" target="_blank"&gt;of&lt;/a&gt; &lt;a href="https://github.com/raintank/raintank-probe" target="_blank"&gt;it&lt;/a&gt; is being developed in the open.&lt;/p&gt;

&lt;p&gt;Our core revenue model is OpenSaaS: We couple our software with optional hosted services that we provide. These services are also powered by software that is open source.&lt;/p&gt;

&lt;p&gt;Most of our users will simply choose to download our open source software, and won&amp;rsquo;t pay us anything. Many will choose to host our stack with another provider.&lt;/p&gt;

&lt;p&gt;That may sound alarming to a potential raintank investor, but it’s actually totally OK, and expected. Not only does open source help us create much better software, but if done right it gives us the most amazing distribution channel that money can’t buy.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s hard to keep up with the awesome ways that Grafana is being used, let alone by whom. Difficulty identifying  your users and successes isn’t an issue most software or SaaS companies face, but it’s pretty endemic in open source. It&amp;rsquo;s something that we&amp;rsquo;re focusing on improving this year at raintank.&lt;/p&gt;

&lt;p&gt;In many situations, we find out that someone is using Grafana in the most indirect ways: a tweet, a job posting that mentions it, a blog post, an issue filed, a PR, or sometimes even a thank you note.&lt;/p&gt;

&lt;p&gt;It’s always a thrill to find out when someone cool is finding value in your software. One of the biggest thrills so far came a few days ago, when our very own Dieter Plaetinck noticed  Grafana on a screen at the SpaceX Launch Control Center during their recent Falcon 9 launch:&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/img/v2/grafana-spotted.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;
&lt;strong&gt;Watch &lt;a href="https://youtu.be/ANv5UfZsvZQ"&gt;The Falcon has landed&lt;/a&gt;&lt;/strong&gt;
&lt;iframe width="640" height="360" src="https://www.youtube.com/embed/ANv5UfZsvZQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;A bunch of us at raintank are huge fans of SpaceX, and follow the launches regularly. We’d love to learn more about what they&amp;rsquo;re doing with Grafana (and have already contacted them). &lt;/p&gt;

&lt;p&gt;In the meantime, knowing that they’ve gotten some small value out of Grafana, and it&amp;rsquo;s up on screen visualizing their measurement data, is just an awesome feeling. &lt;/p&gt;

&lt;p&gt;Onwards and upwards, open source, Grafana, and SpaceX!&lt;/p&gt;

&lt;div style="font-size:75%"&gt;&lt;em&gt;Main photo courtesy of NASA&lt;/em&gt;&lt;/div&gt;
 

&lt;h4 id="thanks-to-project-sponsors"&gt;Thanks to project sponsors&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://raintank.io"&gt;Raintank&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.squarespace.com"&gt;Squarespace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dreamhost.com"&gt;Dreamhost&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.demonware.net"&gt;Demonware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mediamath.com/OpenSource"&gt;Mediamath&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
