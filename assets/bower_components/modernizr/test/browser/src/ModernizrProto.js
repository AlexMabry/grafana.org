describe("ModernizrProto",function(){var e,t,n,i;before(function(){define("package",[],function(){return{version:"v9999"}}),(i=requirejs.config({context:Math.random().toString().slice(2),baseUrl:"../src",paths:{cleanup:"../test/cleanup"}}))(["cleanup"],function(e){t=e})}),beforeEach(function(t){n=[],define("tests",function(){return n}),i(["ModernizrProto","tests"],function(i,r){e=i,n=r,t()})}),afterEach(function(){i.undef("tests"),i.undef("ModernizrProto")}),it("should define a version",function(){expect(e._version).to.be.a("string")}),it("should set a default config",function(){var t=e._config;expect(t.classPrefix).to.be.a("string"),expect(t.enableClasses).to.be.a("boolean"),expect(t.enableJSClass).to.be.a("boolean"),expect(t.usePrefixes).to.be.a("boolean")}),it("should define a working stub for `Modernizr.on`",function(t){e.on("fakeDetect",t)}),it("should define `Modernizr.addTest` and have it pushed to the internal `tests` queue",function(){var t="fakeDetect",i=function(){},r={opt:"opt"};e.addTest(t,i,r),expect(n).to.have.length(1),expect(n[0].name).to.be(t),expect(n[0].fn).to.be(i),expect(n[0].options).to.be(r)}),it("should define `Modernizr.addAsyncTest` and have it pushed to the internal `tests` queue",function(){var t=function(){};e.addAsyncTest(t),expect(n).to.have.length(1),expect(n[0].fn).to.be(t)}),after(function(){t()})});