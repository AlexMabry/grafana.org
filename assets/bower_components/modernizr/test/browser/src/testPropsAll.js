describe("testPropsAll",function(){var e,t,n,r,o,i={_config:{}},a={_q:[]};before(function(e){o=requirejs.config({context:Math.random().toString().slice(2),baseUrl:"../src",paths:{sinon:"../test/js/lib/sinon",cleanup:"../test/cleanup"}}),define("ModernizrProto",[],function(){return i}),define("Modernizr",[],function(){return a}),define("package",[],function(){return{}}),o(["testDOMProps","testProps","cleanup","sinon"],function(o,i,a,c){t=c.spy(o),n=c.spy(i),r=a,e()})}),beforeEach(function(r){o.undef("testDOMProps"),o.undef("testProps"),t.reset(),n.reset(),define("testDOMProps",function(){return t}),define("testProps",function(){return n}),o(["testPropsAll"],function(o){e=o,expect(t.callCount).to.be(0),expect(n.callCount).to.be(0),r()})}),it("`testProps` is called if `prefixed` is a string",function(){e("display","pfx",void 0,"block"),expect(n.callCount).to.be(1)}),it("`testProps` is called if `prefixed` is undefined",function(){e("display",void 0,void 0,"block"),expect(n.callCount).to.be(1)}),it("`testDOMProps` is called if `prefixed` is anything else",function(){e("display",[],void 0,"block"),expect(t.callCount).to.be(1)}),it("is added to ModernizrProto as `testAllProps`",function(){expect(e).to.equal(i.testAllProps)}),afterEach(function(){o.undef("testPropsAll"),o.undef("testDOMProps"),o.undef("testProps")}),after(function(){r()})});