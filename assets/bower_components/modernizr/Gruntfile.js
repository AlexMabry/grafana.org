var browsers=require("./test/browser/sauce-browsers.json"),serveStatic=require("serve-static");module.exports=function(t){"use strict";require("load-grunt-tasks")(t);var e=t.file.expand(["test/universal/**/*.js","test/browser/**/*.js","!test/browser/setup.js","!test/browser/integration/*.js"]);t.initConfig({env:{nodeTests:["test/universal/**/*.js","test/node/**/*.js"],browserTests:e,coverage:{APP_DIR_FOR_CODE_COVERAGE:"test/coverage/instrument",urls:["http://localhost:9999/test/unit.html","http://localhost:9999/test/index.html"]}},generate:{dest:"./dist/modernizr-build.js"},copy:{"gh-pages":{files:[{expand:!0,src:["./**/*","!./test/coverage/**","!./node_modules/*grunt-*/**","!./node_modules/**/node_modules/**"],dest:"gh-pages"}]}},jscs:{src:["Gruntfile.js","src/*.js","lib/*.js","test/**/*.js","feature-detects/**/*.js","!src/html5printshiv.js","!test/coverage/**/*.js","!test/js/lib/**/*.js","!src/html5shiv.js"]},jshint:{options:{jshintrc:!0,ignores:["src/html5printshiv.js","src/html5shiv.js"]},files:["Gruntfile.js","src/*.js","lib/*.js","feature-detects/**/*.js"],tests:{options:{jshintrc:!0},files:{src:["<%= env.nodeTests%>","<%= env.browserTests %>","test/browser/setup.js","test/browser/integration/*.js"]}}},clean:{dist:["dist","test/coverage","test/*.html","gh-pages"]},jade:{compile:{options:{data:{unitTests:e,integrationTests:t.file.expand(["test/browser/integration/*.js"])}},files:{"test/unit.html":"test/browser/unit.jade","test/iframe.html":"test/browser/iframe.jade","test/index.html":"test/browser/integration.jade"}}},connect:{server:{options:{middleware:function(){return[function(e,n,i){var r=e.headers["user-agent"];if("/coverage/client"==e.url&&"POST"==e.method){var o=encodeURI(r.replace(/\//g,"-")),s="";return e.on("data",function(t){s+=t}),void e.on("end",function(){t.file.write("test/coverage/reports/"+o+".json",s),n.end()})}e.url.match(/^\/(src|lib)\//)&&(e.url="/test/coverage/instrument"+e.url),i()},serveStatic(__dirname)]},port:9999}}},"saucelabs-custom":{all:{options:{urls:"<%= env.coverage.urls %>",testname:process.env.CI_BUILD_NUMBER||"Modernizr Test",browsers:browsers,maxRetries:3}}},mocha:{test:{options:{urls:"<%= env.coverage.urls %>",log:!0}}},mochaTest:{test:{options:{reporter:"dot"},src:["<%= env.nodeTests%>"]}},instrument:{files:["src/**/*.js","lib/**/*.js"],options:{basePath:"test/coverage/instrument/"}},storeCoverage:{options:{dir:"test/coverage/reports"}},makeReport:{src:"test/coverage/reports/**/*.json",options:{type:"lcov",dir:"test/coverage/reports",print:"detail"}},coveralls:{all:{src:"test/coverage/reports/lcov.info",options:{force:!0}}}}),t.registerMultiTask("generate","Create a version of Modernizr from Grunt",function(){var e=this.async(),n=require("./lib/config-all"),i=require("./lib/cli"),r=this.data;i.build(n,function(n){t.file.write(r,n),e()})}),t.registerTask("nodeTests",["mochaTest"]),t.registerTask("browserTests",["connect","mocha"]),t.registerTask("build",["clean","generate"]),t.registerTask("lint",["jshint","jscs"]),t.registerTask("default",["lint","build"]);var n=["clean","lint","jade","instrument","env:coverage","nodeTests"];process.env.APPVEYOR?t.registerTask("test",n):"true"!==process.env.BROWSER_COVERAGE?t.registerTask("test",n.concat(["generate","browserTests"])):t.registerTask("test",n.concat(["generate","storeCoverage","browserTests","saucelabs-custom","makeReport","coveralls"]))};